{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "### Flip_180_052919.jdi ###\n",
      "MOD001: MODULAT (( 0, 23.2 ) , ( 1, 24.5 ) , ( 2, 25.7 )\n",
      "-     , ( 3, 27.0 ) , ( 4, 28.2 ) , ( 5, 29.5 )\n",
      "-     , ( 6, 30.8 ) , ( 7, 32.1 ) , ( 8, 33.5 )\n",
      "-     , ( 9, 34.8 ) , ( 10, 36.1 ) , ( 11, 37.5 )\n",
      "-     , ( 12, 38.9 ) , ( 13, 40.3 ) , ( 14, 41.7 )\n",
      "-     , ( 15, 43.1 ) , ( 16, 44.5 ) , ( 17, 46.0 )\n",
      "-     , ( 18, 47.4 ) , ( 19, 48.9 ) , ( 20, 50.4 )\n",
      "-     , ( 21, 51.9 ) , ( 22, 53.4 ) , ( 23, 54.9 )\n",
      "-     , ( 24, 56.5 ) , ( 25, 58.1 ) , ( 26, 59.6 )\n",
      "-     , ( 27, 61.2 ) , ( 28, 62.8 ) , ( 29, 64.5 )\n",
      "-     , ( 30, 66.1 ) , ( 31, 67.8 ) , ( 32, 69.4 )\n",
      "-     , ( 33, 71.1 ) , ( 34, 72.8 ) , ( 35, 74.6 )\n",
      "-     , ( 36, 76.3 ) , ( 37, 78.1 ) , ( 38, 79.9 )\n",
      "-     , ( 39, 81.7 ) , ( 40, 83.5 ) , ( 41, 85.3 )\n",
      "-     , ( 42, 87.2 ) , ( 43, 89.1 ) , ( 44, 90.9 ))\n",
      "\n",
      "; SCAN_STEP = 0.002000\n",
      "; MINIMAL_RESOLUTION = 0.000500\n",
      "; MACHINE_TYPE = JBX-9500FS (100kV)\n",
      "; DIGITAL_SCALING_X = 1.000000\n",
      "; DIGITAL_SCALING_Y = 1.000000\n",
      "; MAXIMUM_BEAMSIZE = 16000\n",
      "; SHOT_SHIFT_COUNT = 1\n",
      "; OVERLAP_COUNT = 1\n",
      "; INCREMENT_SCANNER_DATA_UNIT = 1\n",
      "\n",
      "### Flip_180_052919_modified.jdi ###\n",
      "MOD001: MODULAT (( 0, 146.4 ) , ( 1, 149.0 ) , ( 2, 151.4 )\n",
      "-     , ( 3, 154.0 ) , ( 4, 156.4 ) , ( 5, 159.0 )\n",
      "-     , ( 6, 161.6 ) , ( 7, 164.2 ) , ( 8, 167.0 )\n",
      "-     , ( 9, 169.6 ) , ( 10, 172.2 ) , ( 11, 175.0 )\n",
      "-     , ( 12, 177.8 ) , ( 13, 180.6 ) , ( 14, 183.4 )\n",
      "-     , ( 15, 186.2 ) , ( 16, 189.0 ) , ( 17, 192.0 )\n",
      "-     , ( 18, 194.8 ) , ( 19, 197.8 ) , ( 20, 200.8 )\n",
      "-     , ( 21, 203.8 ) , ( 22, 206.8 ) , ( 23, 209.8 )\n",
      "-     , ( 24, 213.0 ) , ( 25, 216.2 ) , ( 26, 219.2 )\n",
      "-     , ( 27, 222.4 ) , ( 28, 225.6 ) , ( 29, 229.0 )\n",
      "-     , ( 30, 232.2 ) , ( 31, 235.6 ) , ( 32, 238.8 )\n",
      "-     , ( 33, 242.2 ) , ( 34, 245.6 ) , ( 35, 249.2 )\n",
      "-     , ( 36, 252.6 ) , ( 37, 256.2 ) , ( 38, 259.8 )\n",
      "-     , ( 39, 263.4 ) , ( 40, 267.0 ) , ( 41, 270.6 )\n",
      "-     , ( 42, 274.4 ) , ( 43, 278.2 ) , ( 44, 281.8 ))\n",
      "\n",
      "; SCAN_STEP = 0.002000\n",
      "; MINIMAL_RESOLUTION = 0.000500\n",
      "; MACHINE_TYPE = JBX-9500FS (100kV)\n",
      "; DIGITAL_SCALING_X = 1.000000\n",
      "; DIGITAL_SCALING_Y = 1.000000\n",
      "; MAXIMUM_BEAMSIZE = 16000\n",
      "; SHOT_SHIFT_COUNT = 1\n",
      "; OVERLAP_COUNT = 1\n",
      "; INCREMENT_SCANNER_DATA_UNIT = 1\n",
      "; ADDED BY USER\n",
      "; BASE DOSE = 1000\n",
      "; TARGET DOSE = 2000\n",
      "\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "By Jaseung Ku\n",
    "06/13/2019\n",
    "This code is to scale shot modulations in a jdi file to achieve target dose, given base dose.\n",
    "The idea is to modify shot modulation so that we can use only one base dose to use two different dosage,\n",
    "ex) small and large junction that need different dosage.\n",
    "\"\"\"\n",
    "\n",
    "import re\n",
    "import os\n",
    "\n",
    "def scaledModulation(v, baseDose, targetDose):\n",
    "    return 100 * (targetDose/baseDose*(1+v/100)-1)\n",
    "\n",
    "###### set following parameters ##########\n",
    "baseDose, targetDose = 1000, 2000\n",
    "folderName = '/home/jaseung/'  # For windows, use backslash\n",
    "fileName = 'Flip_180_052919.jdi'\n",
    "fileNameOut ='Flip_180_052919_modified.jdi'\n",
    "##########################################\n",
    "\n",
    "fullFilePath = os.path.join(folderName, fileName) \n",
    "fullFilePathOut = os.path.join(folderName, fileNameOut)\n",
    "\n",
    "# read all lines from the jdi and store them in 'lines'\n",
    "with open(fullFilePath, 'r') as f:\n",
    "    lines = f.readlines()   # read each line in jdi\n",
    "\n",
    "# read each line, search all pairs of shot-rank and shot modulation, and replace them with new modulation values.\n",
    "for idx, line in enumerate(lines):\n",
    "    if line.startswith(';'):  # skip comments\n",
    "        break\n",
    "        \n",
    "    foundPairs= re.findall(r'(?!\\()(?<=\\().*?(?=\\))', line)   # look for apairs of shot-rank and modulation,ex)2,25.2\n",
    "    \n",
    "    for pair in foundPairs:\n",
    "        s1, s2 = pair.split(',')\n",
    "        scaledMod = scaledModulation(float(s2), baseDose, targetDose)\n",
    "        lines[idx] = lines[idx].replace(s1 + ',' + s2, s1 + ', ' + '{:.1f}'.format(scaledMod) + ' ')\n",
    "\n",
    "# create a new jdi file with scaled shot modulation     \n",
    "with open(fullFilePathOut, 'w') as f: \n",
    "    for line in lines:\n",
    "        f.write(line)\n",
    "    # add new texts\n",
    "    f.write('; ADDED BY USER\\n')\n",
    "    f.write('; BASE DOSE = {:d}\\n'.format(baseDose))\n",
    "    f.write('; TARGET DOSE = {:d}\\n'.format(targetDose))\n",
    "\n",
    "# print the original jdi file\n",
    "print('### {:s} ###'.format(fileName))\n",
    "with open(fullFilePath, 'r') as f:\n",
    "    contents = f.read()\n",
    "    print(contents)\n",
    "    \n",
    "# print the new fjdi ile\n",
    "print('### {:s} ###'.format(fileNameOut))\n",
    "with open(fullFilePathOut, 'r') as f:\n",
    "    contents = f.read()\n",
    "    print(contents)\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
